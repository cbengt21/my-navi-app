1. Enable Front-end search. -> Done
2. Get coordinates (lat, lon) of destination to be able to send it with start pos to back-end. -> Done
3. Connect front-end and back-end. -> Done
4. Ensure correct nearest nodes are found. -> Done
5. Make route calculation and send it to front end for printing. -> Done
6. Create repo with web page. -> Done
7. recalculate route when position changes
8. load tiles dynamically
9. Better route calculations:
 - A* search           Use heuristic to cut graph   ~10x speedup
 - KD-tree / R-tree    Fast nearest node 	        ~1000x faster
 - Use -O3	            Compiler optimization	    2â€“5x speedup -> Done

10. Make them run together over internet with Raspberry PI 5.





Ways Reference Nodes by ID
OSM ways do not contain coordinates; they only reference node IDs.
Example from an .osm file:
<way id="123">
    <nd ref="1001"/>
    <nd ref="1002"/>
    <nd ref="1003"/>
    <tag k="highway" v="primary"/>
</way>

Nodes Are Defined Separately
Example node definitions:
<node id="1001" lat="52.1" lon="13.4"/>
<node id="1002" lat="52.2" lon="13.5"/>
<node id="1003" lat="52.3" lon="13.6"/>

